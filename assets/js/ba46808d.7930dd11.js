"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[57],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=l(n),u=o,f=m["".concat(p,".").concat(u)]||m[u]||d[u]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[m]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3113:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2},i="Demos",c={unversionedId:"Demos",id:"Demos",title:"Demos",description:"Online Demo",source:"@site/docs/Demos.md",sourceDirName:".",slug:"/Demos",permalink:"/docs/Demos",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/intro"},next:{title:"LAMM-Dataset",permalink:"/docs/LAMM-Dataset"}},p={},l=[{value:"Online Demo",id:"online-demo",level:2},{value:"CLI Demo",id:"cli-demo",level:2}],s={toc:l},m="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(m,(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"demos"},"Demos"),(0,o.kt)("h2",{id:"online-demo"},"Online Demo"),(0,o.kt)("p",null,"For cases of 2D images, we provide an ",(0,o.kt)("a",{parentName:"p",href:"https://huggingface.co/spaces/openlamm/LAMM"},"online demo")," deployed on huggingface spaces."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Due to limitation of hardware capacity, online version only supports LLM of 7B parameters and load pretrained model takes few minutes.\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://huggingface.co/spaces/openlamm/LAMM"},(0,o.kt)("img",{src:n(8149).Z,width:"1130",height:"967"}))),(0,o.kt)("h2",{id:"cli-demo"},"CLI Demo"),(0,o.kt)("p",null,"We also provide a CLI demo for local test.\nPoint cloud data are required to be in format of ",(0,o.kt)("inlineCode",{parentName:"p"},"npy"),", we suggest to use data from LAMM-Benchmark-3D."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"    cd ./src\n    python cli_demo.py \\\n        --model lamm_peft \\\n        --vision_type pcl or image \\\n        --encoder_pretrain epcl or clip \\\n        --encoder_ckpt_path $EPCL_CKPT_PATH or '' \\\n        --vicuna_ckpt_path $LLM_CKPT_PATH \\\n        --delta_ckpt_path $LAMM_CKPT_PATH\n")))}d.isMDXComponent=!0},8149:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/LAMM_2d_demo-cbee7bb65fb5c2daf088aa3b86f6bf2d.png"}}]);